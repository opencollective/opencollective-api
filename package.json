{
  "private": true,
  "name": "opencollective-api",
  "description": "Open Collective API",
  "license": "MIT",
  "contributors": [
    "Arnaud Bénard (https://github.com/arnaudbenard)",
    "Aseem Sood (https://github.com/asood123)",
    "Benjamin Piouffle (https://github.com/Betree)",
    "François Hodierne (https://github.com/znarf)",
    "Kate Beard (https://github.com/sbinlondon)",
    "Leo Kewitz (https://github.com/kewitz)",
    "Lincoln de Sousa (https://github.com/clarete)",
    "Nick Hehr (https://github.com/HipsterBrown)",
    "Oluwaseun Omoyajowo (https://github.com/flickz)",
    "Philippe Modard (https://github.com/Philmod)",
    "Pia Mancini (https://github.com/piamancini)",
    "Sébastien Dubois (https://github.com/sedubois)",
    "Xavier Damman (https://github.com/xdamman)"
  ],
  "repository": {
    "type": "git",
    "url": "https://github.com/opencollective/opencollective-api.git"
  },
  "main": "server/index.js",
  "config": {
    "commitizen": {
      "path": "./node_modules/cz-conventional-changelog"
    }
  },
  "dependencies": {
    "@apollo/server": "4.7.5",
    "@babel/core": "7.22.5",
    "@babel/node": "7.22.5",
    "@babel/plugin-proposal-class-properties": "7.18.6",
    "@babel/plugin-transform-async-to-generator": "7.22.5",
    "@babel/plugin-transform-typescript": "7.22.5",
    "@babel/preset-env": "7.22.5",
    "@escape.tech/graphql-armor": "2.2.0",
    "@hyperwatch/hyperwatch": "3.9.4",
    "@node-oauth/oauth2-server": "4.3.0",
    "@octokit/auth-oauth-app": "6.0.1",
    "@octokit/rest": "19.0.13",
    "@opencollective/taxes": "4.0.2",
    "@paypal/payouts-sdk": "1.1.1",
    "@sentry/node": "7.57.0",
    "@sentry/types": "7.57.0",
    "@shopify/address": "4.1.0",
    "argparse": "2.0.1",
    "aws-sdk": "2.1408.0",
    "axios": "1.4.0",
    "babel-plugin-add-module-exports": "1.0.4",
    "bayes": "1.0.0",
    "bcrypt": "5.1.0",
    "blurhash": "2.0.5",
    "burner-email-providers": "github:opencollective/burner-email-providers",
    "cloudflare": "2.9.1",
    "cloudflare-ip": "0.0.7",
    "commander": "11.0.0",
    "config": "3.3.9",
    "connect-redis": "7.1.0",
    "cookie-parser": "1.4.6",
    "cors": "2.8.5",
    "crypto-js": "4.1.1",
    "crypto-random-string": "3.3.1",
    "dataloader": "2.2.2",
    "dataloader-sequelize": "2.3.3",
    "debug": "4.3.4",
    "deepmerge": "4.3.1",
    "dotenv": "16.3.1",
    "errorhandler": "1.5.1",
    "express": "4.18.2",
    "express-basic-auth": "1.2.1",
    "express-session": "1.17.3",
    "express-ws": "5.0.2",
    "fast-redact": "3.2.0",
    "fs-extra": "11.1.1",
    "get-urls": "10.0.1",
    "gqlmin": "0.1.1",
    "graphql": "16.7.1",
    "graphql-scalars": "1.22.2",
    "graphql-upload": "15.0.2",
    "handlebars": "4.7.7",
    "hashids": "2.3.0",
    "hcaptcha": "0.1.1",
    "helloworks-sdk": "1.3.0",
    "helmet": "7.0.0",
    "html-pdf": "3.0.1",
    "html-to-text": "9.0.5",
    "ics": "3.2.0",
    "intl-messageformat": "10.5.0",
    "json2csv": "5.0.7",
    "jsonwebtoken": "9.0.0",
    "juice": "9.0.0",
    "limax": "4.1.0",
    "lodash": "4.17.21",
    "lru-cache": "10.0.0",
    "moment": "2.29.4",
    "moment-timezone": "0.5.43",
    "multer": "1.4.4",
    "node-fetch": "2.6.12",
    "node-statsd": "0.1.1",
    "nodemailer": "6.9.3",
    "p-filter": "2.1.0",
    "p-map": "4.0.0",
    "p-queue": "6.6.2",
    "p-throttle": "4.1.1",
    "passport": "0.6.0",
    "passport-github": "1.1.0",
    "passport-twitter": "1.0.4",
    "paypal-adaptive": "0.4.2",
    "pg": "8.11.1",
    "pg-connection-string": "2.6.1",
    "pg-format": "1.0.4",
    "prepend-http": "3.0.1",
    "redis": "4.6.6",
    "sanitize-html": "2.11.0",
    "sequelize": "6.32.1",
    "sequelize-cli": "6.6.1",
    "sequelize-temporal": "1.0.8",
    "sharp": "0.32.1",
    "showdown": "2.1.0",
    "spdx-license-list": "^6.6.0",
    "speakeasy": "2.0.0",
    "stripe": "12.11.0",
    "throng": "5.0.0",
    "tweetnacl": "1.0.3",
    "tweetnacl-util": "0.15.1",
    "twitter": "1.7.1",
    "uuid": "9.0.0",
    "validator": "13.9.0",
    "winston": "3.9.0",
    "zod": "3.21.4"
  },
  "devDependencies": {
    "@babel/cli": "^7.22.5",
    "@babel/eslint-parser": "^7.22.5",
    "@babel/register": "^7.22.5",
    "@opentelemetry/api": "^1.4.1",
    "@opentelemetry/auto-instrumentations-node": "^0.37.0",
    "@opentelemetry/exporter-trace-otlp-proto": "^0.40.0",
    "@opentelemetry/instrumentation": "^0.40.0",
    "@opentelemetry/resources": "^1.14.0",
    "@opentelemetry/sdk-trace-base": "^1.14.0",
    "@opentelemetry/sdk-trace-node": "^1.14.0",
    "@types/graphql-upload": "15.0.2",
    "@types/lodash": "^4.14.195",
    "@types/mocha": "^10.0.1",
    "@types/node": "^18.0.0",
    "@types/node-fetch": "^2.6.4",
    "@types/nodemailer": "^6.4.8",
    "@types/validator": "^13.7.17",
    "@typescript-eslint/eslint-plugin": "^5.59.9",
    "@typescript-eslint/parser": "^5.59.9",
    "babel-plugin-istanbul": "^6.1.1",
    "chai": "^4.3.7",
    "chai-as-promised": "^7.1.1",
    "chai-jest-snapshot": "^2.0.0",
    "chai-sorted": "^0.2.0",
    "chai-subset": "^1.6.0",
    "codecov": "^3.8.2",
    "commitizen": "^4.3.0",
    "cz-conventional-changelog": "^3.3.0",
    "eslint": "^8.42.0",
    "eslint-config-opencollective": "^3.0.3",
    "eslint-plugin-babel": "^5.3.1",
    "eslint-plugin-graphql": "^4.0.0",
    "eslint-plugin-import": "^2.27.5",
    "eslint-plugin-mocha": "10.1.0",
    "eslint-plugin-node": "^11.1.0",
    "eslint-plugin-react": "^7.32.2",
    "eslint-plugin-simple-import-sort": "^10.0.0",
    "fake-tag": "^3.0.0",
    "geoip-lite": "^1.4.7",
    "husky": "^4.3.8",
    "lint-staged": "^10.5.4",
    "maildev": "2.0.5",
    "markdown-table": "^2.0.0",
    "mocha": "^10.2.0",
    "nock": "^13.3.1",
    "nodemon": "^2.0.22",
    "npm-run-all": "^4.1.5",
    "nyc": "^15.1.0",
    "opentelemetry-instrumentation-sequelize": "^0.35.0",
    "prettier": "2.8.8",
    "sinon": "^15.1.0",
    "sinon-chai": "^3.7.0",
    "supertest": "^6.3.3",
    "typescript": "^5.1.3"
  },
  "scripts": {
    "build": "npm run build:clean && npm run build:updates && npm run build:server",
    "build:clean": "rm -rf dist && mkdir dist",
    "build:server": "babel server --extensions .js,.ts -d ./dist",
    "build:updates": "npm --prefix node_modules/cloudflare-ip run update-list",
    "clean": "npm run build:clean && npm run test:clean",
    "commit": "git-cz",
    "compile:email": "babel-node --extensions .js,.ts scripts/compile-email.js",
    "compile:email:watch": "./scripts/watch_email_template.sh",
    "cron:10mn": "./scripts/cron.sh 10mn",
    "cron:daily": "./scripts/cron.sh daily",
    "cron:hourly": "./scripts/cron.sh hourly",
    "cron:monthly": "./scripts/cron.sh monthly",
    "cron:weekly": "./scripts/cron.sh weekly",
    "cron:yearly": "./scripts/cron.sh yearly",
    "db:clean": "babel-node --extensions .js,.ts ./scripts/sanitize-db.ts",
    "db:copy:prod": "./scripts/db_copy_to_localhost.sh prod && PG_DATABASE=opencollective_prod_snapshot npm run db:sanitize",
    "db:copy:prod:staging": "./scripts/db_copy_prod_to_staging.sh opencollective-staging-api && heroku run npm run db:sanitize --app opencollective-staging-api",
    "db:copy:prod:staging-dev": "./scripts/db_copy_prod_to_staging.sh $DEV && heroku run npm run db:sanitize --app $DEV",
    "db:copy:staging": "./scripts/db_copy_to_localhost.sh staging",
    "db:dump:dev": "./scripts/db_migrate_opencollective_dvl.sh",
    "db:migrate": "./scripts/sequelize.sh db:migrate",
    "db:migrate:undo": "./scripts/sequelize.sh db:migrate:undo",
    "db:migration:create": "./scripts/sequelize.sh migration:create",
    "db:migration:archive": "babel-node --extensions .js,.ts scripts/db_migrations_archive.ts",
    "db:restore": "./scripts/db_restore.sh",
    "db:restore:e2e": "npm run db:restore -- -d opencollective_e2e",
    "db:restore:test": "NODE_ENV=test npm run db:restore -- -d opencollective_test && NODE_ENV=test npm run db:migrate",
    "db:sanitize": "babel-node --extensions .js,.ts scripts/sanitize-db.ts",
    "db:sanitize-collective-tags": "babel-node --extensions .js,.ts scripts/sanitize-collective-tags",
    "db:seed": "./scripts/sequelize.sh db:seed",
    "db:setup": "babel-node --extensions .js,.ts ./scripts/db_setup.js",
    "depcheck": "npx depcheck .",
    "deploy:production": "./scripts/pre-deploy.sh production && git push production main",
    "deploy:staging": "./scripts/pre-deploy.sh staging && git push -f staging main",
    "dev": "nodemon server/index.js -x \"babel-node --extensions .js,.ts\" . -e js,hbs,ts",
    "docs:generate:oauth": "babel-node --extensions .js,.ts ./scripts/docs/oauth.ts",
    "export:csv": "babel-node --extensions .js,.ts cron/monthly/data-export.js",
    "forestadmin-schema:update": "npm run script scripts/forestadmin-schema-update && prettier .forestadmin-schema.json --write",
    "git:clean": "./scripts/git_clean.sh",
    "graphql:update": "npm-run-all graphql:updateV1 graphql:updateV2",
    "graphql:updateV1": "npm run script scripts/update-gql-schemas.ts http://localhost:3060/graphql/v1 server/graphql/schemaV1.graphql && prettier server/graphql/schemaV1.graphql --write",
    "graphql:updateV2": "npm run script scripts/update-gql-schemas.ts http://localhost:3060/graphql/v2 server/graphql/schemaV2.graphql && prettier server/graphql/schemaV2.graphql --write",
    "hint": "npm run lint:quiet",
    "lint": "eslint . --ext='js,ts'",
    "lint:check": "npm run lint -- --quiet",
    "lint:fix": "npm run lint -- --fix",
    "maildev": "maildev",
    "postdb:migrate:dev": "npm run db:clean",
    "postinstall": "./scripts/postinstall.sh",
    "prettier": "prettier \"**/*.@(js|ts|json|md)\" --ignore-path .eslintignore",
    "prettier:check": "npm run prettier -- --check",
    "prettier:write": "npm run prettier -- --write",
    "refund-transactions": "babel-node --extensions .js,.ts ./scripts/add_refund_transactions_from_collective.js",
    "report": "node scripts/send_email_report_cli.js",
    "script": "babel-node --extensions .js,.ts $1",
    "sequelize": "babel-node --extensions .js,.ts -- ./node_modules/.bin/sequelize --config config/sequelize-cli.js",
    "start": "node ./dist/index.js",
    "start:e2e": "TZ=UTC NODE_ENV=production OC_ENV=e2e E2E_TEST=1 npm-run-all db:restore:e2e db:migrate build start:e2e:server",
    "start:e2e:server": "node ./dist/e2e.js",
    "test:watch": "TZ=UTC nyc mocha --watch",
    "test": "TZ=UTC nyc --all mocha",
    "test:update": "CHAI_JEST_SNAPSHOT_UPDATE_ALL=true npm run test",
    "test:clean-db-snapshots": "rm -rf test/dbdumps/snapshots/*",
    "test:update-db-snapshots": "npm run test:clean-db-snapshots && UPDATE_DB_SNAPSHOTS=true npm run test $(grep -rH 'getOrCreateDBSnapshot' --include='*.test.js' --include='*.test.ts' . | cut -d ':' -f 1 | uniq)",
    "test:clean": "rm -rf .nyc_output coverage",
    "test:coverage": "codecov",
    "test:graphql": "npm run test test/server/graphql",
    "test:lib": "npm run test test/server/lib",
    "test:models": "npm run test test/server/models",
    "test:payment-providers": "npm run test test/server/paymentProviders",
    "test:routes": "npm run test test/server/routes",
    "test:scripts": "npm run test test/scripts",
    "test:sql": "npm run test test/sql",
    "type:check": "tsc"
  },
  "engines": {
    "node": "18.x",
    "npm": "9.x"
  },
  "husky": {
    "hooks": {
      "pre-commit": "lint-staged"
    }
  },
  "lint-staged": {
    "*.{js,json,md}": [
      "prettier --write"
    ]
  },
  "nyc": {
    "reporter": [
      "lcov"
    ],
    "cache": true
  },
  "depcheck": {
    "ignoreDirs": [
      "dist",
      "dbdumps",
      "migrations/archives"
    ],
    "specials": [
      "babel",
      "bin",
      "commitizen",
      "eslint",
      "husky",
      "lint-staged",
      "mocha"
    ]
  }
}
